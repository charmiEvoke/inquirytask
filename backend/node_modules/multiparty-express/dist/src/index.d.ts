import { NextFunction, Request, Response } from 'express';
declare namespace multipartyExpress {
    interface File {
        /**
         * same as name - the field name for this file
         */
        fieldName: string;
        /**
         * the filename that the user reports for the file
         */
        originalFilename: string;
        /**
         * the absolute path of the uploaded file on disk
         */
        path: string;
        /**
         * the HTTP headers that were sent along with this file
         */
        headers: unknown;
        /**
         * size of the file in bytes
         */
        size: number;
    }
    interface Files {
        [key: string]: File[];
    }
    interface Fields {
        [key: string]: any[];
    }
}
declare global {
    namespace Express {
        interface Request {
            fields: multipartyExpress.Fields;
            files: multipartyExpress.Files;
        }
    }
}
declare function multipartyExpress(): (req: Request, res: Response, next: NextFunction) => void;
export { multipartyExpress };
export default multipartyExpress;
export declare function cleanup(req: Request): Promise<void>;
